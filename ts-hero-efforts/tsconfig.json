{
  "version": "1.8.0",
  "compilerOptions": {
    "target": "es5",
    // "rootDir": "./",                      /*  用来指定编译文件的根目录，编译器会在根目录查找入口文件  */
    "outDir": "./dist",                   /*  outDir 用来指定输出文件夹，值为一个文件夹路径字符串，输出的文件都将放置在该文件夹种 */
    //"outFile": "./",                    /*  outFile 用于指定输出文件合并为一个文件，只有设置module的值为amd和system模块时才支持这个配置  */
    "lib": [
      "dom",
      "es6"
    ],
    "module": "commonjs",
    "moduleResolution": "node",           /*  用于选择模块解析策略，有"node"和"classic"两种类型 [TODO] */
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true,
    "declaration": true,                  /*  用来指定是否在编译的时候生成相的d.ts声明文件，如果设为true,编译每个ts文件之后会生成一个js文件和一个声明文件，但是declaration和allowJs不能同时设为true */
    "declarationMap": false,              /*  用来指定编译时是否生成.map文件  [TODO] 和 sourceMap 配置的区别  */
    "sourceMap": true,                    /*  socuceMap 用来指定编译时是否生成.map文件 */

    /* 类型检查相关，需要先开启 strict: true */
    "strict": true,                       /*  强制类型检查  */
    "noImplicitAny": true,                /*  比如：function xx(a, b) {}，这里的 a b 没有指明类型，a b 在 noImplicitAny = true 的时候会报错。如果我们没有一些值设置明确类型，编译器会默认认为这个值为any类型，设为true,则如果没有设置明确的类型会报错，默认值为false*/
    "strictNullChecks": true,             /*  strictNullChecks当设为true时，null和undefined值不能赋值给非这两种类型的值，别的类型的值也不能赋给他们，除了any类型，还有个例外就是undefined可以赋值给void类型 */
    "noImplicitThis": true,               /*  此规则不允许this上下文隐式定义  */
    "strictPropertyInitialization": true, /*  此规则将验证构造函数内部初始化前后已定义的属性。必须要确保每个实例的属性都有初始值，可以在构造函数里或者属性定义时赋值。  */
    "strictBindCallApply": true,          /*  此规则将对 bind, call, apply 更严格地检测类型。 */
    "strictFunctionTypes": true,          /*  该规则将检查并限制函数类型参数是抗变（contravariantly）而非双变（bivariantly，即协变或抗变）的。  */

    "removeComments": true,               /*  编译的时候移除注释  */
    "skipLibCheck": false,                /*  跳过所有声明文件的类型检查  */
    "esModuleInterop": true,
    "resolveJsonModule": true,
    "allowSyntheticDefaultImports": true, /*  用来指定允许从没有默认导出的模块中默认导入  */
    "noEmit": false,                      /* noEmit = true，不生成编译文件，默认：false */
    // "isolatedModules": true                /* 指定是否将每个文件作为单独的模块，默认为true，他不可以和declaration同时设定 */
  },
  "include": [
    "src"
  ],
  "exclude": [
    "dist",
    "node_modules"
  ]
}
